/*

This example shows how the plumbing of the 0d runtime is connected.
What should be apparent is that this code can be trivially connected
at runtime (as is shown in `demo_drawio`) or generated by a metaprogram.

*/
package demo_basics

import "core:fmt"

import zd "../0d"

Eh                :: zd.Eh
Message           :: zd.Message
make_container    :: zd.make_container
make_message      :: zd.make_message
make_leaf         :: zd.make_leaf
send              :: zd.send
print_output_list :: zd.print_output_list

main :: proc() {
    fmt.println("--- Basics: Sequential ---")
    {
        echo_handler :: proc(eh: ^Eh, message: ^Message) {
            send(eh=eh, port="stdout", datum=message.datum, causingMessage=nil)
        }

	makeleaf :: proc (name: string, handler: #type proc(^Eh, ^Message)) -> ^Eh {
            return make_leaf(name=name, owner=nil, instance_data=nil, handler=echo_handler)
	}
	
        echo0 := makeleaf("10", echo_handler)
        echo1 := makeleaf("11", echo_handler)

        top := make_container("Top", nil)

        top.children = {
            echo0,
            echo1,
        }

        top.connections = {
            {.Down,   {"Top", nil, "stdin"},              {"Top.10", &top.children[0].input, "stdin"}},
            {.Across, {"Top.10", top.children[0], "stdout"}, {"Top.11", &top.children[1].input, "stdin"}},
            {.Up,     {"Top.11", top.children[1], "stdout"}, {"Top", &top.output, "stdout"}},
        }

        top.handler(top, make_message("stdin", zd.new_datum_string ("hello"), nil))
        print_output_list(top)
    }

    fmt.println("--- Basics: Parallel ---")
    {
        echo_handler :: proc(eh: ^Eh, message: ^Message) {
            send(eh=eh, port="stdout", datum=message.datum, causingMessage=nil)
        }

	makeleaf :: proc (name: string, handler: #type proc(^Eh,^Message)) -> ^Eh{
            return make_leaf(name=name, owner=nil, instance_data=nil, handler=echo_handler)
	}
	
        top := make_container("Top", nil)

        top.children = {
            makeleaf("20", echo_handler),
            makeleaf("21", echo_handler),
        }

        top.connections = {
            {.Down, {"Top", nil, "stdin"},              {"Top.20", &top.children[0].input, "stdin"}},
            {.Down, {"Top", nil, "stdin"},              {"Top 21", &top.children[1].input, "stdin"}},
            {.Up,   {"Top.20", top.children[0], "stdout"}, {"Top", &top.output, "stdout"}},
            {.Up,   {"Top.21", top.children[1], "stdout"}, {"Top", &top.output, "stdout"}},
        }

        top.handler(top, make_message("stdin", zd.new_datum_string ("hello"), nil))
        print_output_list(top)
    }

}
